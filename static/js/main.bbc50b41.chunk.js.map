{"version":3,"sources":["imgs/TrybeStore.PNG","services/api.js","components/Categorias.js","components/Button.js","components/ProductsContainer.js","components/Header.js","components/ProductsList.js","components/Slider.js","pages/Home.js","components/ProductCard.js","components/CartItems.js","pages/Cart.js","pages/CartProduct.js","pages/Checkout.js","components/AvaluationForm.js","components/AvaluationCard.js","components/AvaluationBoard.js","pages/ProductDetails.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getCategories","a","fetch","response","json","categoriesData","productID","url","productData","getProductsFromCategoryAndQuery","categoryId","query","result","getProductsDetailsByID","Categorias","state","categories","SetCategoriesState","setState","this","props","onInputChange","handleSelectChange","categoriaClass","className","htmlFor","name","onChange","value","selected","map","categoria","key","id","data-testid","type","onClick","React","Component","Button","cartItems","sumTotal","length","item","quantity","reduce","acc","ProductsContainer","searchItem","placeholder","onKeyPress","event","Header","menuDisplay","iconMenu","showMenu","to","src","TrybeStore","alt","ProductsList","productsList","addToCart","index","thumbnail","title","price","shipping","free_shipping","JSON","stringify","Slider","imageClass","sliderIndex","slideImageRight","slideImageLeft","Home","searchInput","sliderImage","searched","target","sort","b","changeCategoryClass","loading","itemsFound","undefined","results","ProductCard","addProductQuantity","removeProductQuantity","CartItems","product","Cart","CartProduct","Checkout","AvaluationForm","sendAvaluation","userEmail","userDescription","rows","cols","AvaluationCard","email","rate","description","AvaluationBoard","avaluationsSaved","avaluation","ProductDetails","match","params","productAvaluation","cloneArray","push","localStorage","setItem","savedAvaluations","getItem","parse","App","productDecoded","newArray","every","productObject","some","available_quantity","changedQuantityProduct","quantityProductIndex","cartCloneArray","findIndex","filter","exact","path","render","component","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bbc50b41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TrybeStore.ccb331dc.PNG\";","export async function getCategories() {\n  // Implemente\n\n  const url = 'https://api.mercadolibre.com/sites/MLB/categories';\n\n  const response = await fetch(url);\n  const categoriesData = await response.json();\n  return categoriesData;\n}\n\nasync function getProductsDetailsByID(productID) {\n  const url = `https://api.mercadolibre.com/items/${productID}`;\n  const response = await fetch(url);\n  const productData = await response.json();\n  return productData;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId = '', query = '') {\n  // Implemente aqui! Quando o fizer, descomente os parâmetros que essa função recebe\n  let result;\n  if (categoryId !== '' && query === '') { // PROCURA SOMENTE POR CATEGORIA\n    const url = `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}`;\n\n    const response = await fetch(url);\n    const categoriesData = await response.json();\n    result = categoriesData;\n  } else if (categoryId === '' && query !== '') { // PROCURA SOMENTE ITEM SEM CATEGORIA\n    const url = `https://api.mercadolibre.com/sites/MLB/search?q=${query}`;\n\n    const response = await fetch(url);\n    const categoriesData = await response.json();\n    result = categoriesData;\n  } else if (categoryId !== '' && query !== '') { // PROCURA SOMENTE ITEM POR CATEGORIA\n    const url = ` https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`;\n\n    const response = await fetch(url);\n    const categoriesData = await response.json();\n    result = categoriesData;\n  }\n  return result;\n}\n\nexport default getProductsDetailsByID;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getCategories } from '../services/api';\n\nclass Categorias extends React.Component {\n  state = {\n    categories: [],\n  };\n\n  async componentDidMount() {\n    const categories = await getCategories();\n    this.SetCategoriesState(categories);\n  }\n\n  SetCategoriesState = (categories) => {\n    this.setState({ categories });\n  };\n\n  render() {\n    const { categories } = this.state;\n    const { onInputChange, handleSelectChange, categoriaClass } = this.props;\n    return (\n      <section className={ categoriaClass }>\n        <div>\n          <h3 className=\"title-text\">Categorias:</h3>\n          <label htmlFor=\"sort-by-price\">\n            <select name=\"sort-by-price\" onChange={ handleSelectChange }>\n              <option value=\"sortByPrice\" selected>\n                Ordenar por preço\n              </option>\n              <option value=\"lowToHigh\">Menor Preço</option>\n              <option value=\"highToLow\">Maior Preço</option>\n            </select>\n          </label>\n        </div>\n        {categories.map((categoria) => (\n          <div key={ categoria.id }>\n            <label data-testid=\"category\" htmlFor={ categoria.id }>\n              <input\n                type=\"radio\"\n                id={ categoria.id }\n                name=\"categoria\"\n                value={ categoria.id }\n                onClick={ onInputChange }\n              />\n              {categoria.name}\n            </label>\n          </div>\n        ))}\n      </section>\n    );\n  }\n}\n\nCategorias.propTypes = {\n  onInputChange: PropTypes.func.isRequired,\n  handleSelectChange: PropTypes.func.isRequired,\n  categoriaClass: PropTypes.string.isRequired,\n};\n\nexport default Categorias;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Button extends React.Component {\n  render() {\n    const { cartItems } = this.props;\n    let sumTotal = 0;\n    if (cartItems.length !== 0) {\n      const arrayQuantity = cartItems.map((item) => item.quantity);\n      sumTotal = arrayQuantity.reduce((item, acc) => acc + item);\n    }\n    return (\n      <div className=\"quantify-container \">\n        { sumTotal }\n      </div>\n    );\n  }\n}\n\nButton.propTypes = {\n  cartItems: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ProductsContainer extends React.Component {\n  render() {\n    const { searchItem, onInputChange } = this.props;\n    return (\n      <div className=\"search\">\n        <input\n          type=\"text\"\n          data-testid=\"query-input\"\n          name=\"searchInput\"\n          onChange={ onInputChange }\n          placeholder=\"Estou procurando...\"\n          onKeyPress={ (event) => {\n            if (event.key === 'Enter') {\n              searchItem();\n            }\n          } }\n        />\n        <button\n          className=\"search-button\"\n          type=\"button\"\n          data-testid=\"query-button\"\n          onClick={ searchItem }\n        >\n          <i className=\"uil uil-search\" />\n        </button>\n      </div>\n    );\n  }\n}\n\nProductsContainer.propTypes = {\n  onInputChange: PropTypes.func.isRequired,\n  searchItem: PropTypes.func.isRequired,\n};\n\nexport default ProductsContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Button from './Button';\nimport ProductsContainer from './ProductsContainer';\nimport TrybeStore from '../imgs/TrybeStore.PNG';\n\nconst displayNone = 'display-none';\n\nclass Header extends React.Component {\n  state = {\n    menuDisplay: displayNone,\n    iconMenu: 'uil-list-ul',\n  };\n\n  showMenu = () => {\n    const { menuDisplay } = this.state;\n    if (menuDisplay === displayNone) {\n      this.setState({ menuDisplay: '', iconMenu: 'uil-multiply' });\n    } else {\n      this.setState({ menuDisplay: displayNone, iconMenu: 'uil-list-ul' });\n    }\n  };\n\n  render() {\n    const { menuDisplay, iconMenu } = this.state;\n    const { cartItems, onInputChange, searchItem } = this.props;\n    return (\n      <header>\n        <div className=\"header-box\">\n          <Link to=\"/\">\n            <img className=\"logo\" src={ TrybeStore } alt=\"logo da trybe\" />\n          </Link>\n          <ProductsContainer\n            onInputChange={ onInputChange }\n            searchItem={ searchItem }\n          />\n          <Button cartItems={ cartItems } />\n          <button type=\"button\" onClick={ this.showMenu } className=\"button-menu\">\n            <i className={ `uil ${iconMenu} icon` } />\n          </button>\n        </div>\n        <nav className={ `nav-items ${menuDisplay}` }>\n          <Link to=\"/\">\n            <span className=\"text-menu\">Home</span>\n            <i className=\"uil uil-estate\" />\n          </Link>\n          <Link to=\"/cart\" data-testid=\"shopping-cart-button\">\n            <span className=\"text-menu\">Cart</span>\n            <i className=\"uil uil-shopping-cart\" />\n          </Link>\n        </nav>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  cartItems: PropTypes.arrayOf.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  searchItem: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass ProductsList extends React.Component {\n  render() {\n    const { productsList, addToCart } = this.props;\n    return (\n      <div className=\"products-container\">\n        {productsList.map((item, index) => (\n          <div key={ `item${index}` } className=\"product card\" data-testid=\"product\">\n            <img\n              className=\"product-image\"\n              src={ item.thumbnail }\n              alt={ item.title }\n            />\n            <span>\n              R$\n              { item.price }\n            </span>\n            {item.shipping.free_shipping && (\n              <span data-testid=\"free-shipping\" className=\"free-shipping\">\n                Frete Grátis!\n              </span>\n            )}\n            <Link\n              to={ `/product/details/${item.id}` }\n              data-testid=\"product-detail-link\"\n              className=\"button-link\"\n            >\n              Ver detalhes\n              {' '}\n              <i className=\"uil uil-ellipsis-v\" />\n            </Link>\n            <button\n              type=\"button\"\n              name=\"product-add-to-cart\"\n              className=\"cart-button\"\n              data-testid=\"product-add-to-cart\"\n              id={ JSON.stringify(item) }\n              onClick={ addToCart }\n            >\n              Adicionar ao Carrinho\n            </button>\n            <span className=\"item-title\">{item.title}</span>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nProductsList.propTypes = {\n  productsList: PropTypes.arrayOf.isRequired,\n  addToCart: PropTypes.func.isRequired,\n};\n\nexport default ProductsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Slider extends React.Component {\n  render() {\n    const { imageClass, sliderIndex, slideImageRight, slideImageLeft } = this.props;\n    return (\n      <div className={ imageClass[sliderIndex] }>\n        <button className=\"slider-btton\" type=\"button\" onClick={ slideImageLeft }>\n          <i className=\"uil uil-angle-left-b\" />\n        </button>\n        <button className=\"slider-btton\" type=\"button\" onClick={ slideImageRight }>\n          <i className=\"uil uil-angle-right-b\" />\n        </button>\n      </div>\n    );\n  }\n}\n\nSlider.propTypes = {\n  imageClass: PropTypes.arrayOf.isRequired,\n  sliderIndex: PropTypes.number.isRequired,\n  slideImageRight: PropTypes.func.isRequired,\n  slideImageLeft: PropTypes.func.isRequired,\n};\n\nexport default Slider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Categorias from '../components/Categorias';\nimport Header from '../components/Header';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport ProductsList from '../components/ProductsList';\nimport Slider from '../components/Slider';\n\nclass Home extends React.Component {\n  state = {\n    productsList: [],\n    categoria: '',\n    searchInput: '',\n    categoriaClass: 'categorias',\n    sliderImage: ['first-image', 'second-image', 'third-image'],\n    sliderIndex: 0,\n    searched: false,\n  };\n\n  handleSelectChange = ({ target }) => {\n    const { productsList } = this.state;\n    if (target.value === 'lowToHigh') {\n      this.setState({\n        categoriaClass: 'categorias',\n        productsList: productsList.sort((a, b) => a.price - b.price),\n      });\n    }\n    if (target.value === 'highToLow') {\n      this.setState({\n        categoriaClass: 'categorias',\n        productsList: productsList.sort((a, b) => b.price - a.price),\n      });\n    }\n    if (target.value === 'sortByPrice') {\n      this.setState({ categoriaClass: 'categorias' });\n      this.searchItem();\n    }\n  };\n\n  onInputChange = ({ target }) => {\n    const { value, name } = target;\n    if (name === 'categoria') {\n      this.setState(\n        { [name]: value, categoriaClass: 'categorias' },\n        this.searchItem,\n        { categoriaClass: 'categorias-active' },\n      ); // SE FOR CATEGORIA JA ATUALIZA NO CLICK DO RADIO\n    } else {\n      this.setState({ [name]: value }); // SE NAO ATUALIZASOMENTE O ESTADO DO INPUT\n    }\n  };\n\n  // FUNÇÂO QUE VAI TROCAR A CLASSE DA CATEGORIA\n  changeCategoryClass = () => {\n    this.setState(() => ({ categoriaClass: 'categorias-active' }));\n  };\n\n  // FUNÇÂO QUE CHAMA A API E ATUALIZA A LISTA DE ITEMS\n  searchItem = async () => {\n    const { categoria, searchInput } = this.state;\n    this.setState({ loading: true });\n    const itemsFound = await getProductsFromCategoryAndQuery(\n      categoria,\n      searchInput,\n    );\n    if (categoria !== '' || searchInput !== '') {\n      if (itemsFound.results !== undefined) {\n        this.setState({\n          productsList: itemsFound.results,\n          searched: true,\n          loading: false,\n        });\n      } else {\n        this.setState({ searched: true, loading: false });\n      }\n    }\n  };\n\n  // TROCA A IMAGEM PARA A DIREITA\n\n  slideImageRight = () => {\n    const { sliderImage, sliderIndex } = this.state;\n    if (sliderIndex === sliderImage.length - 1) {\n      this.setState({ sliderIndex: 0 });\n    } else {\n      this.setState({ sliderIndex: sliderIndex + 1 });\n    }\n  };\n\n  slideImageLeft = () => {\n    const { sliderImage, sliderIndex } = this.state;\n    if (sliderIndex === 0) {\n      this.setState({ sliderIndex: sliderImage.length - 1 });\n    } else {\n      this.setState({ sliderIndex: sliderIndex - 1 });\n    }\n  };\n\n  render() {\n    const {\n      productsList,\n      searched,\n      categoriaClass,\n      sliderImage,\n      sliderIndex,\n      loading,\n    } = this.state;\n    const { addToCart, cartItems } = this.props;\n    return (\n      <>\n        <Header\n          cartItems={ cartItems }\n          searchItem={ this.searchItem }\n          onInputChange={ this.onInputChange }\n        />\n        <Slider\n          imageClass={ sliderImage }\n          sliderIndex={ sliderIndex }\n          slideImageRight={ this.slideImageRight }\n          slideImageLeft={ this.slideImageLeft }\n        />\n        <div className=\"center-me\">\n          { loading\n            ? (\n              <div className=\"c-loader\" />\n            )\n            : ''}\n        </div>\n        <div className=\"container\">\n          {searched && productsList.length === 0\n            ? 'Nenhum produto encontrador'\n            : searched && (\n              <ProductsList\n                productsList={ productsList }\n                addToCart={ addToCart }\n              />\n            )}\n          {searched === false && (\n            <div className=\"products-container\">\n              <p data-testid=\"home-initial-message\">\n                Digite algum termo de pesquisa ou escolha uma categoria.\n              </p>\n            </div>\n          )}\n          <div className=\"filter\">\n            <button\n              type=\"button\"\n              className=\"slider-btton\"\n              onClick={ this.changeCategoryClass }\n            >\n              <i className=\"uil uil-exchange-alt\" />\n              Ordenar\n            </button>\n          </div>\n          <Categorias\n            categoriaClass={ categoriaClass }\n            onInputChange={ this.onInputChange }\n            handleSelectChange={ this.handleSelectChange }\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nHome.propTypes = {\n  addToCart: PropTypes.func.isRequired,\n  cartItems: PropTypes.arrayOf.isRequired,\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ProductCard extends React.Component {\n  render() {\n    const { item, quantity, addProductQuantity, removeProductQuantity } = this.props;\n    return (\n\n      <div\n        key={ item.id }\n        className=\"card\n          cart\n          mb-3\n          mt-1\n          card-center\"\n      >\n\n        <div className=\"flex mb-3 card-center\">\n\n          <img src={ item.thumbnail } alt={ item.title } />\n\n          <div className=\"mx-2 flex card-descriptions\">\n            <div className=\"card-width\">\n\n              <h2 data-testid=\"shopping-cart-product-name\">{ `${item.title}` }</h2>\n\n              { item.shipping.free_shipping && (\n                <span data-testid=\"free-shipping\" className=\"free-shipping\">\n                  Frete Grátis!\n                </span>\n              ) }\n\n            </div>\n\n            <div className=\"centerp\">\n              <p>\n                R$\n                { item.price * quantity }\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex end\">\n          <button\n            className=\"btn btn-qtd btn-outline-success\"\n            data-testid=\"product-decrease-quantity\"\n            type=\"button\"\n            onClick={ removeProductQuantity }\n            id={ item.id }\n          >\n            -\n          </button>\n          <div\n            data-testid=\"shopping-cart-product-quantity\"\n            className=\"btn\"\n          >\n            { quantity }\n          </div>\n          <button\n            className=\"btn btn-qtd btn-outline-success\"\n            data-testid=\"product-increase-quantity\"\n            type=\"button\"\n            id={ item.id }\n            onClick={ addProductQuantity }\n          >\n            +\n          </button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  item: PropTypes.objectOf.isRequired,\n  quantity: PropTypes.number.isRequired,\n  addProductQuantity: PropTypes.func.isRequired,\n  removeProductQuantity: PropTypes.func.isRequired,\n};\n\nexport default ProductCard;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ProductCard from './ProductCard';\n\nclass CartItems extends React.Component {\n  render() {\n    const { cartItems, addProductQuantity, removeProductQuantity } = this.props;\n    return (\n      <div className=\"py-5\">\n        { cartItems.map((item, index) => (\n          <ProductCard\n            key={ `product${index}` }\n            removeProductQuantity={ removeProductQuantity }\n            addProductQuantity={ addProductQuantity }\n            quantity={ item.quantity }\n            item={ item.product }\n          />\n\n        )) }\n\n        <div className=\"flex\">\n          <div\n            className=\"btn\n          btn-success\n          button-cart\n          flex\n          mb-3\n          mx-auto\"\n          >\n\n            <Link\n              data-testid=\"checkout-products\"\n              to=\"/checkout\"\n            >\n              Finalizar Compra\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nCartItems.propTypes = {\n  cartItems: PropTypes.arrayOf.isRequired,\n  addProductQuantity: PropTypes.func.isRequired,\n  removeProductQuantity: PropTypes.func.isRequired,\n};\n\nexport default CartItems;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CartItems from '../components/CartItems';\nimport Header from '../components/Header';\n\nclass Cart extends React.Component {\n  render() {\n    const { cartItems, addProductQuantity, removeProductQuantity } = this.props;\n    return (\n      <>\n\n        <Header cartItems={ cartItems } />\n\n        { cartItems.length !== 0 ? (\n\n          <section className=\"cart-full\">\n            <CartItems\n              cartItems={ cartItems }\n              removeProductQuantity={ removeProductQuantity }\n              addProductQuantity={ addProductQuantity }\n            />\n          </section>\n\n        ) : (\n\n          <p data-testid=\"shopping-cart-empty-message\">\n            Seu carrinho está vazio\n          </p>\n\n        ) }\n\n      </>\n    );\n  }\n}\n\nCart.propTypes = {\n  cartItems: PropTypes.arrayOf.isRequired,\n  addProductQuantity: PropTypes.func.isRequired,\n  removeProductQuantity: PropTypes.func.isRequired,\n};\n\nexport default Cart;\n","import React from 'react';\n\nclass CartProduct extends React.Component {\n  render() {\n    return (\n      <div />\n    );\n  }\n}\n\nexport default CartProduct;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\n\nclass Checkout extends React.Component {\n  render() {\n    const { cartItems } = this.props;\n    return (\n      <>\n        <Header cartItems={ cartItems } />\n        <form className=\"checkout\">\n          <label className=\"label-form-item\" htmlFor=\"input-fullname\">\n            Nome\n            <input name=\"input-fullname\" data-testid=\"checkout-fullname\" />\n          </label>\n          <label className=\"label-form-item\" htmlFor=\"input-email\">\n            Email\n            <input\n              name=\"input-email\"\n              type=\"email\"\n              data-testid=\"checkout-email\"\n            />\n          </label>\n          <label className=\"label-form-item\" htmlFor=\"input-cpf\">\n            CPF\n            <input name=\"input-cpf\" data-testid=\"checkout-cpf\" />\n          </label>\n          <label className=\"label-form-item\" htmlFor=\"input-phone-number\">\n            Telefone\n            <input name=\"input-phone-number\" data-testid=\"checkout-phone\" />\n          </label>\n          <label className=\"label-form-item\" htmlFor=\"input-cep\">\n            CEP\n            <input name=\"input-cep\" data-testid=\"checkout-cep\" />\n          </label>\n          <label className=\"label-form-item\" htmlFor=\"input-adress\">\n            Endereço\n            <input name=\"input-adress\" data-testid=\"checkout-address\" />\n          </label>\n          <button className=\"finalize-button\" type=\"button\">\n            Finalizar compra\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nCheckout.propTypes = {\n  cartItems: PropTypes.arrayOf.isRequired,\n};\n\nexport default Checkout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AvaluationForm extends React.Component {\n  render() {\n    const { onInputChange, sendAvaluation, userEmail, userDescription } = this.props;\n    return (\n      <section className=\"user-rating-sec mb-5\">\n        <div className=\"rating-container card\">\n          <div>\n            <input\n              className=\"email form-control mb-3\"\n              type=\"email\"\n              value={ userEmail }\n              name=\"userEmail\"\n              data-testid=\"product-detail-email\"\n              placeholder=\"Seu e-mail\"\n              onChange={ onInputChange }\n            />\n            <input\n              className=\"form-check-input mb-3\"\n              type=\"radio\"\n              name=\"avaluation\"\n              value=\"1\"\n              data-testid=\"1-rating\"\n              onChange={ onInputChange }\n            />\n            <input\n              className=\"form-check-input mb-3\"\n              type=\"radio\"\n              name=\"avaluation\"\n              value=\"2\"\n              data-testid=\"2-rating\"\n              onChange={ onInputChange }\n            />\n            <input\n              className=\"form-check-input mb-3\"\n              type=\"radio\"\n              name=\"avaluation\"\n              value=\"3\"\n              data-testid=\"3-rating\"\n              onChange={ onInputChange }\n            />\n            <input\n              className=\"form-check-input mb-3\"\n              type=\"radio\"\n              name=\"avaluation\"\n              value=\"4\"\n              data-testid=\"4-rating\"\n              onChange={ onInputChange }\n            />\n            <input\n              className=\"form-check-input mb-3\"\n              type=\"radio\"\n              name=\"avaluation\"\n              value=\"5\"\n              data-testid=\"5-rating\"\n              onChange={ onInputChange }\n            />\n          </div>\n          <div>\n            <textarea\n              className=\"form-control mb-3 textarea\"\n              id=\"userDescription\"\n              name=\"userDescription\"\n              rows=\"5\"\n              cols=\"33\"\n              value={ userDescription }\n              onChange={ onInputChange }\n              data-testid=\"product-detail-evaluation\"\n            />\n          </div>\n          <button\n            className=\"btn btn-outline-success\"\n            type=\"button\"\n            data-testid=\"submit-review-btn\"\n            onClick={ sendAvaluation }\n          >\n            Enviar Avaliação\n          </button>\n        </div>\n      </section>\n    );\n  }\n}\n\nAvaluationForm.propTypes = {\n  onInputChange: PropTypes.func.isRequired,\n  sendAvaluation: PropTypes.func.isRequired,\n  userEmail: PropTypes.string.isRequired,\n  userDescription: PropTypes.string.isRequired,\n};\n\nexport default AvaluationForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AvaluationCard extends React.Component {\n  render() {\n    const { email, rate, description } = this.props;\n    return (\n      <div className=\"card mb-3 p-3\">\n        <div>\n          <span>\n            e-mail:\n            { email }\n          </span>\n        </div>\n        <span>\n          Nota:\n          { rate }\n        </span>\n        <p>\n          Comentário:\n          { description }\n        </p>\n      </div>\n    );\n  }\n}\n\nAvaluationCard.propTypes = {\n  email: PropTypes.string.isRequired,\n  rate: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};\n\nexport default AvaluationCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AvaluationCard from './AvaluationCard';\n\nclass AvaluationBoard extends React.Component {\n  render() {\n    const { avaluationsSaved } = this.props;\n    return (\n      <section className=\"avaluations-saved-sec card mb-5\">\n        {avaluationsSaved.map((avaluation, index) => (\n          <AvaluationCard\n            key={ index }\n            description={ avaluation.description }\n            rate={ avaluation.rate }\n            email={ avaluation.email }\n          />\n        ))}\n      </section>\n    );\n  }\n}\n\nAvaluationBoard.propTypes = {\n  avaluationsSaved: PropTypes.func.isRequired,\n};\n\nexport default AvaluationBoard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getProductsDetailsByID from '../services/api';\nimport AvaluationForm from '../components/AvaluationForm';\nimport AvaluationBoard from '../components/AvaluationBoard';\n\nclass ProductDetails extends React.Component {\n  state = {\n    product: '',\n    userEmail: '',\n    avaluation: '0',\n    userDescription: '',\n    avaluationsSaved: [],\n  };\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n    } = this.props;\n    const product = await getProductsDetailsByID(id);\n    this.setState(() => ({ product }));\n  }\n\n  sendAvaluation = () => {\n    const {\n      match: {\n        params: { id },\n      },\n    } = this.props;\n    // PEGAMOS OS DADOS NO ESTADO\n    const { avaluation, userEmail, userDescription, avaluationsSaved } = this.state;\n    // CRIAMOS UM OBJETO\n    const productAvaluation = {\n      email: userEmail,\n      description: userDescription,\n      rate: avaluation,\n    };\n    // CLONAMOS O ARRAY\n    let cloneArray = [];\n    cloneArray = [...avaluationsSaved];\n    // LANÇAMOS O OBJETO NO ARRAY\n    cloneArray.push(productAvaluation);\n    // SALVAMOS NO ESTADO\n    this.setState({\n      avaluationsSaved: cloneArray,\n      userEmail: '',\n      avaluation: '0',\n      userDescription: '',\n    });\n    // SALVAMOS NO LOCAL STORAGE AS AV DO PRODUTO\n    localStorage.setItem(id, JSON.stringify(cloneArray));\n  };\n\n  onInputChange = ({ target }) => {\n    const { value, name } = target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const {\n      addToCart,\n      match: {\n        params: { id },\n      },\n      cartItems,\n    } = this.props;\n    const { product, userEmail, avaluation, userDescription } = this.state;\n    const { title, price, thumbnail } = product;\n    let savedAvaluations;\n    // VERIFICAMOS SE TEM ALGO NESSE LOCAL STORAGE\n    if (!localStorage.getItem(id)) {\n      // SE NAO TIVER RETORNA VAZIO\n      savedAvaluations = [];\n    } else {\n      // SE TIVER RETORNA O ARRAY\n      savedAvaluations = JSON.parse(localStorage.getItem(id));\n    }\n    return (\n      <>\n        <Header cartItems={ cartItems } />\n        <main>\n          <section\n            className=\"container-fluid\n            py-4\n            card\n            detailsPage\n            space-between\"\n          >\n\n            <div className=\"m-3\">\n              <img src={ thumbnail } alt={ title } />\n            </div>\n\n            <div className=\"fs-1 ms-1 mt-3 detailsInfo\">\n\n              <h2 data-testid=\"product-detail-name\">{ title }</h2>\n\n              <p>\n                R$\n                { price }\n              </p>\n              <button\n                className=\"btn btn-success button\"\n                type=\"submit\"\n                data-testid=\"product-detail-add-to-cart\"\n                id={ JSON.stringify(product) }\n                onClick={ addToCart }\n              >\n                Adicionar ao Carrinho\n              </button>\n\n            </div>\n\n          </section>\n          <AvaluationForm\n            className=\"mb-5\"\n            userEmail={ userEmail }\n            avaluation={ avaluation }\n            userDescription={ userDescription }\n            sendAvaluation={ this.sendAvaluation }\n            onInputChange={ this.onInputChange }\n          />\n          <AvaluationBoard avaluationsSaved={ savedAvaluations } />\n        </main>\n      </>\n    );\n  }\n}\n\nexport default ProductDetails;\n\nProductDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  addToCart: PropTypes.func.isRequired,\n  cartItems: PropTypes.arrayOf.isRequired,\n};\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Cart from './pages/Cart';\nimport CartProduct from './pages/CartProduct';\nimport Checkout from './pages/Checkout';\nimport ProductDetails from './pages/ProductDetails';\n\nclass App extends React.Component {\n  state = {\n    cartItems: [],\n  };\n\n  componentDidMount() {\n    if (!localStorage.getItem('cartItems') === false) {\n      this.setState({\n        cartItems: JSON.parse(localStorage.getItem('cartItems')),\n      });\n    }\n  }\n\n  addToCart = async ({ target }) => {\n    const { cartItems } = this.state;\n    const productDecoded = JSON.parse(target.id);\n    const newArray = cartItems;\n    if (cartItems.every((item) => item.product.id !== productDecoded.id)) {\n      const productObject = { quantity: 1, product: productDecoded };\n      newArray.push(productObject);\n      this.setState(() => ({\n        cartItems: newArray,\n      }));\n    } else if (\n      cartItems.some((item) => item.product.id === productDecoded.id)\n    ) {\n      if (\n        cartItems.length === 1\n        && cartItems[0].quantity < productDecoded.available_quantity[0]\n      ) {\n        // PEGAMOS O PRODUTO REMOVIDO\n        const changedQuantityProduct = cartItems[0];\n        // ALTERAMOS A QUANTIDADE DO PRODUTO REMOVIDO\n        changedQuantityProduct.quantity += 1;\n        // ADICIONAMOS NOVAMENTE AO ARRAY\n        this.setState({ cartItems: [changedQuantityProduct] });\n      } else {\n        // CRIA O CLONE DO ARRAY PARA ALTERAÇÔES\n        const cartCloneArray = cartItems;\n        // ACHAMOS O OBJETO DO PRODUTO REMOVIDO\n        // PEGAMOS A POSIÇÂO DO PRODUTO REMOVIDO\n        const quantityProductIndex = cartCloneArray.findIndex(\n          (item) => item.product.id === productDecoded.id,\n        );\n        // Salvamos o produto removido\n        const changedQuantityProduct = cartCloneArray.filter(\n          (item) => item.product.id === productDecoded.id,\n        )[0];\n        // ALTERAMOS O OBJETO DO PRODUTO\n        if (\n          changedQuantityProduct.quantity\n          < changedQuantityProduct.product.available_quantity\n        ) {\n          changedQuantityProduct.quantity += 1;\n          // COLOCAMOS ELE ALTERADO NA MESMA POSIÇÂO\n          cartCloneArray[quantityProductIndex] = changedQuantityProduct;\n        }\n        //  MUDAMOS O ESTADO\n        this.setState({ cartItems: cartCloneArray });\n      }\n    }\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n  };\n\n  addProductQuantity = async ({ target }) => {\n    const { cartItems } = this.state;\n    const { id } = target;\n    if (cartItems.length === 1) {\n      // PEGAMOS O PRODUTO REMOVIDO\n      const changedQuantityProduct = cartItems[0];\n      // ALTERAMOS A QUANTIDADE DO PRODUTO REMOVIDO\n      if (\n        cartItems[0].quantity\n        < changedQuantityProduct.product.available_quantity\n      ) {\n        changedQuantityProduct.quantity += 1;\n      }\n      // ADICIONAMOS NOVAMENTE AO ARRAY\n      this.setState({ cartItems: [changedQuantityProduct] });\n    } else {\n      // CRIA O CLONE DO ARRAY PARA ALTERAÇÔES\n      const cartCloneArray = cartItems;\n      // ACHAMOS O OBJETO DO PRODUTO REMOVIDO\n      // PEGAMOS A POSIÇÂO DO PRODUTO REMOVIDO\n      const quantityProductIndex = cartCloneArray.findIndex(\n        (item) => item.product.id === id,\n      );\n      // Salvamos o produto removido\n      const changedQuantityProduct = cartCloneArray.filter(\n        (item) => item.product.id === id,\n      )[0];\n      // ALTERAMOS O OBJETO DO PRODUTO\n      if (\n        changedQuantityProduct.quantity\n        < changedQuantityProduct.product.available_quantity\n      ) {\n        changedQuantityProduct.quantity += 1;\n      }\n      // COLOCAMOS ELE ALTERADO NA MESMA POSIÇÂO\n      cartCloneArray[quantityProductIndex] = changedQuantityProduct;\n      //  MUDAMOS O ESTADO\n      this.setState({ cartItems: cartCloneArray });\n    }\n  };\n\n  removeProductQuantity = ({ target }) => {\n    const { id } = target;\n    const { cartItems } = this.state;\n    // CRIAMOS O CLONE PARA ALTERAÇÂO\n\n    // PEGAMOS O PRODUTO A SER REDUTARE\n    const productToRemove = cartItems.filter(\n      (item) => item.product.id === id,\n    )[0];\n    if (productToRemove.quantity !== 1) {\n      // CRIA O CLONE DO ARRAY PARA ALTERAÇÔES\n      const cartCloneArray = cartItems;\n      // PEGAMOS A POSIÇÂO DO PRODUTO REMOVIDO\n      const quantityProductIndex = cartCloneArray.findIndex(\n        (item) => item.product.id === id,\n      );\n      // Salvamos o produto removido\n      const changedQuantityProduct = cartCloneArray.filter(\n        (item) => item.product.id === id,\n      )[0];\n      // ALTERAMOS O OBJETO DO PRODUTO\n      changedQuantityProduct.quantity -= 1;\n      // COLOCAMOS ELE ALTERADO NA MESMA POSIÇÂO\n      cartCloneArray[quantityProductIndex] = changedQuantityProduct;\n      //  MUDAMOS O ESTADO\n      this.setState({ cartItems: cartCloneArray });\n    }\n  };\n\n  render() {\n    const { cartItems } = this.state;\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={ (props) => (\n              <Home\n                { ...props }\n                cartItems={ cartItems }\n                addToCart={ this.addToCart }\n              />\n            ) }\n          />\n          <Route\n            path=\"/frontend-online-store\"\n            render={ (props) => (\n              <Home\n                { ...props }\n                cartItems={ cartItems }\n                addToCart={ this.addToCart }\n              />\n            ) }\n          />\n          <Route\n            path=\"/cart\"\n            render={ (props) => (\n              <Cart\n                { ...props }\n                removeProductQuantity={ this.removeProductQuantity }\n                addProductQuantity={ this.addProductQuantity }\n                cartItems={ cartItems }\n              />\n            ) }\n          />\n          <Route path=\"/cart/:product\" component={ CartProduct } />\n          <Route\n            path=\"/checkout\"\n            render={ (props) => <Checkout { ...props } cartItems={ cartItems } /> }\n          />\n          <Route\n            path=\"/product/details/:id\"\n            render={ (props) => (\n              <ProductDetails\n                { ...props }\n                cartItems={ cartItems }\n                addToCart={ this.addToCart }\n              />\n            ) }\n          />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/header.css';\nimport './css/ProductDetails.css';\nimport './css/home.css'\nimport './css/checkout.css'\nimport './css/ProductCard.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}